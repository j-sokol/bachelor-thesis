
\section{Ansible}

Ansible je nástroj určený k~automatickému nastavení strojů podle předem určených parametrů. Součástí bakalářské práce jsou konfigurační soubory pro Ansible, tzv. playbooky, pomocí kterých je možné jednotlivé části infrastruktury nakonfigurovat během několika minut.

Ansible v~porovnání s~konkurenčními nástroji, jako je např. Chef nebo Puppet, nevyžaduje žádnou instalaci agenta na koncových zařízeních. Pro připojení ke koncovým
zařízením  se tak nejčastěji používá SSH (Secure Shell). V~terminologii Ansiblu se tato zařízení označují jako uzly (angl. nodes). Informace o~jednotlivých uzlech jsou uvedeny v~inventáři (angl. Inventory), kde je možné definovat parametr uzlů.


\subsection{Inventář}

Důležitým souborem v~Ansible je tzv. Inventář (Inventory), který obsahuje informace o~nastavovaných uzlech. Formát souboru je INI \cite{ini-fmt}, kde by měly být specifikovány jména uzlů, jejich IP adresy, uživatelská jména, hesla, porty, na kterých se chceme připojit, atp. Soubor nám umožňuje jednotlivé servery seskupovat.

\begin{minted}{text}
$ cat servers_list
[master]
host1  ip_addr=10.10.1.2

[proxy]
host2  ip_addr=10.10.2.2
host3  ip_addr=10.10.3.3

[collectd]
host4  ip_addr=10.10.1.3
\end{minted}

Pro přidání další lokality do infrastruktury je tedy nutné pouze přidat server s~jeho IP adresou do Inventářového souboru (je nutné mít v~novém proxy serveru SSH klíč Ansible serveru). Při vytváření (úpravě) inventářového souboru je třeba dbát na určité požadavky:

\begin{itemize}
\item server označený jako master musí být pouze jeden,
\item collectd server též pouze jeden,
\item proxy serverů může být libovolně (role proxy musí být zprovozněna alespoň na jednom serveru -- klidně na stejném, jako master, nebo jiném).
\end{itemize}


\subsection{Spouštění příkazů v~Ansible}

Při použití Ansible jsou možné dva různé způsoby vzdáleného spuštění příkazů na nastavovaných serverech. První metodou je tzv. Ad-Hoc \cite{ansible-ad-hoc}. Tímto způsobem je možné interaktivně (z~příkazové řádky) spustit příkaz a okamžitě vidět výsledek činnosti. Příkladem je ping modul, pomocí kterého je možné zjistit, zda servery jsou po síti dostupné:

\begin{minted}{text}
$ ansible -m ping -u deployer servers_list
\end{minted}

Po vykonání příkazu Ansible s~pomocí ping modulu vyzkouší všechny servery definované v~inventářovém souboru \mintinline{latex}{servers_list}, zda jsou dostupné k~připojení přes SSH. Případem užití je většinou rychlé nasazení oprav na více serverů najednou. Těchto modulů je v~současnosti přes 500 \cite{ansible-num-modules} a s~každým vydáním nové verze jich přibývá.


Jiným přístupem při definování serverů je konfigurace pomocí Ansible Playbooků. Playbooky jsou skripty psané v~jazyce YAML. Viz krátká ukázka:
\begin{minted}{text}

---
- name : Install and configure foreman
    hosts : servers_list
    remote_user : user
    sudo : yes

  tasks :
  - name : ( os = Debian ) Install Foreman
    apt: name=foreman state=present update_cache=yes
    sudo: yes

\end{minted}


Při vykonávání Playbooku se Ansible pokusí vytvořit SSH připojení se všemi servery definovanými v~souboru \mintinline{latex}{servers_list}. Pokud konfigurovaný server obsahuje OS Debian, nainstaluje se z~repozitářů balíček Foreman. Playbooky v~příloze práce jsou složitější.

\subsection{Playbook pro Foreman a proxy servery}

Scénáře Ansiblu mohou být velice strukturovatelné. V~našem případě je rozdělíme do více souborů, a poté je budeme ovládat nadřazeným scénářem. Tato volba by měla pomoci udržet scénáře přehledné. Vytvoříme tedy role -- sady příkazů pro provedení určitých změn. Role jsou reprezentovány adresářem v~adresáři roles. Inspirací pro konfigurační soubory v~příloze bakalářské práce jsou již vytvořené playbooky pro instalaci instancí Foremanu od společnosti Adfinis Sysgroup \cite{foreman-ansible-playbooks}, volně dostupné v~jejich GitHub repozitáři.

Playbooky obsahují několik rolí, které lze na cílový server nainstalovat:


\begin{itemize}
\item Foreman pomocí Foreman instalátoru,
\item dodatečná konfigurace Foremanu (webserver, šablony obsažené ve Foremanu, instalace pluginu),
\item nastavení isc-dhcp-server,
\item nastavení TFTP serveru,
\item foreman-proxy,
\item nastavení collectd serveru pro sběr metrik.
\end{itemize}

Před spuštěním playbooku je třeba splnit určité požadavky. Pokud požadavky nejsou splněny, instalace nemusí být zakončena správně. Mezi tyto nároky patří:

Master server:

\begin{itemize}
\item správně nastavené FQDN (DNS A~záznam musí mířit na tento server),
\item vypnutý SELinux,
\item jelikož je s~Foremanem instalován i puppet, je třeba, aby stroj měl alespoň 2GB RAM paměti,
\item ve firewallu je třeba, aby porty 67, 69, 80, 443 (a další dle kapitoly Zabezpečení serveru) byly otevřené,
\item byl na konfigurovaném serveru přístup k~internetu a repozitářům Debianu.

Na proxy serveru se předpokládá, že síťové rozhraní eth0 je použito pro veřejnou síť, eth1 pro interní síť.


Playbooky jsou dostupné jak na CD práce, tak v~mém GitHub repozitáři \cite{thesis-ansible}.
